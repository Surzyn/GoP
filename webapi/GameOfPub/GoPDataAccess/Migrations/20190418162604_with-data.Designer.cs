// <auto-generated />
using System;
using GoPDataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoPDataAccess.Migrations
{
    [DbContext(typeof(PubDataContext))]
    [Migration("20190418162604_with-data")]
    partial class withdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoPDataAccess.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("PubId");

                    b.Property<int>("Rate");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("PubId");

                    b.ToTable("Comments");

                    b.HasData(
                        new { Id = 1, CreationDate = new DateTime(2018, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Rate = 10, Text = "Najlepsze burgery w miescie" },
                        new { Id = 2, CreationDate = new DateTime(2019, 4, 18, 18, 26, 4, 128, DateTimeKind.Local), Rate = 10, Text = "Nie polecam" }
                    );
                });

            modelBuilder.Entity("GoPDataAccess.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentId");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("PubId");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("PubId");

                    b.ToTable("Images");

                    b.HasData(
                        new { Id = 1, ImageUrl = "https://media-cdn.tripadvisor.com/media/photo-s/15/4b/fd/3d/gotta-love-that-monster.jpg", PubId = 1 },
                        new { Id = 2, CommentId = 1, ImageUrl = "https://img.grouponcdn.com/deal/iAwMo3Nro6CReRkvnkj7/jL-2048x1229/v1/c700x420.jpg" },
                        new { Id = 3, CommentId = 1, ImageUrl = "http://streetfoodpolska.pl/web/wp-content/uploads/2017/07/blu-przekr%C4%98j.jpg" },
                        new { Id = 4, CommentId = 2, ImageUrl = "https://www.likealocalguide.com/media/cache/1e/52/1e52677c916d0d345e0897a5455d80a6.jpg" },
                        new { Id = 5, ImageUrl = "http://wroclawskiejedzenie.pl/wp-content/uploads/2015/10/IMG_3731.jpg", PubId = 2 }
                    );
                });

            modelBuilder.Entity("GoPDataAccess.Models.Pub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Rate");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Pubs");

                    b.HasData(
                        new { Id = 1, CreationDate = new DateTime(2017, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Miejsce gdzie mozna zjesc dobrego burgera", Name = "M22", Rate = 10.0, Street = "Marka" },
                        new { Id = 2, CreationDate = new DateTime(2017, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Miejsce gdzie mozna zjesc burgera", Name = "Moa", Rate = 4.0, Street = "Mikołajska" }
                    );
                });

            modelBuilder.Entity("GoPDataAccess.Models.Comment", b =>
                {
                    b.HasOne("GoPDataAccess.Models.Pub")
                        .WithMany("Comments")
                        .HasForeignKey("PubId");
                });

            modelBuilder.Entity("GoPDataAccess.Models.Image", b =>
                {
                    b.HasOne("GoPDataAccess.Models.Comment")
                        .WithMany("Images")
                        .HasForeignKey("CommentId");

                    b.HasOne("GoPDataAccess.Models.Pub")
                        .WithMany("Images")
                        .HasForeignKey("PubId");
                });
#pragma warning restore 612, 618
        }
    }
}
